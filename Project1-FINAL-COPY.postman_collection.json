{
	"info": {
		"_postman_id": "0c51e3af-ba5d-4b0b-a7ea-2823a9183058",
		"name": "Project1-FINAL-COPY",
		"description": "Add LIST USERS API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27583274",
		"_collection_link": "https://www.postman.com/prasara/workspace/comcasttraining/collection/27583274-0c51e3af-ba5d-4b0b-a7ea-2823a9183058?action=share&source=collection_link&creator=27583274"
	},
	"item": [
		{
			"name": "NEGATIVE TC",
			"item": [
				{
					"name": "UNSUPPORTED HTTP METHODS",
					"item": [
						{
							"name": "LIST USERS API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								},
								"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "LIST USERS API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna1\",\r\n        \"email\": \"INFO5@info.test\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "LIST USERS API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna12i\",\r\n        \"email\": \"INFO95@inf2o.test\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"prasanna-new\",\"email\":\"INFO94@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"prasanna-new\",\"email\":\"INFO04@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6930594",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6930594"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"prasanna-new\",\"email\":\"INFO49@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "DELETE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx client side error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6930594",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6930594"
									]
								},
								"description": "DELETE USER API:\n\n**This is a REST API that uses HTTP method=DELETE and is used to delete existing user details in the server/database**\n\n**Expected Result:  \n**\n\n- **Verify if response code received from server is 204 No Content-PASSED**\n    \n- **Verify if response time from server < 5 seconds-PASSED**\n    \n- **Verify if response body is not received from server-PASSED**"
							},
							"response": []
						}
					]
				},
				{
					"name": "BROKEND ENDPOINTS TESTING",
					"item": [
						{
							"name": "LIST USERS API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v1/users/6923544",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v1",
										"users",
										"6923544"
									]
								},
								"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "LIST USERS API Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://gorest.co.in/private/v1/users/6923544",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"private",
										"v1",
										"users",
										"6923544"
									]
								},
								"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna1\",\r\n        \"email\": \"INFO5@info.test\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v1/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v1",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna1\",\r\n        \"email\": \"INFO5@info.test\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/private/v1/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"private",
										"v1",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"prasanna-new\",\"email\":\"INFO4@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v1/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v1",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"prasanna-new\",\"email\":\"INFO4@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/private/v1/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"private",
										"v1",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "DELETE USER API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v1/users/6918690",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v1",
										"users",
										"6918690"
									]
								},
								"description": "DELETE USER API:\n\n**This is a REST API that uses HTTP method=DELETE and is used to delete existing user details in the server/database**\n\n**Expected Result:  \n**\n\n- **Verify if response code received from server is 204 No Content-PASSED**\n    \n- **Verify if response time from server < 5 seconds-PASSED**\n    \n- **Verify if response body is not received from server-PASSED**"
							},
							"response": []
						},
						{
							"name": "DELETE USER API Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/private/v1/users/6918690",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"private",
										"v1",
										"users",
										"6918690"
									]
								},
								"description": "DELETE USER API:\n\n**This is a REST API that uses HTTP method=DELETE and is used to delete existing user details in the server/database**\n\n**Expected Result:  \n**\n\n- **Verify if response code received from server is 204 No Content-PASSED**\n    \n- **Verify if response time from server < 5 seconds-PASSED**\n    \n- **Verify if response body is not received from server-PASSED**"
							},
							"response": []
						}
					]
				},
				{
					"name": "PAYLOAD TAMPERING TESTING",
					"item": [
						{
							"name": "CREATE USER API-INVALID Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanjnagf1\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"others\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API-INVALID status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna1\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"yes\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API-INVALID Datatype",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"123*(576676879\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"yes\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API-INVALID Data Length",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1 prasanna1\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "CREATE USER API-NEW PAYLOAD FIELDS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"prann5657a1\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\",\r\n        \"mobile\": \"676726878387\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								},
								"description": "CREATE USER API\n\n  \nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database  \n  \nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-EMPTY NAME",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"\",\"email\":\"INFO4@info.test\",\"gender\":\"female\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-EMPTY GENDER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"posrtwt\",\"email\":\"{{$randomEmail}}\",\"gender\":\"\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-EMPTY EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"posrtwt\",\"email\":\"\",\"gender\":\"male\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-NEW PAYLOAD FIELD",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"posrtwt\",\"email\":\"{{$randomEmail}}\",\"gender\":\"male\",\"status\":\"active\",\"mobile\":\"26567547687\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-INVALID Datatype",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"12756564:'@#$%\",\"email\":\"{{$randomEmail}}\",\"gender\":\"male\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-INVALID DataLength",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw comcastw\",\"email\":\"{{$randomEmail}}\",\"gender\":\"male\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						},
						{
							"name": "UPDATE USER API-INVALID Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx or 5xx error\", function () {\r",
											"    pm.response.to.be.error;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{CAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"comcastw3\",\"email\":\"{{$randomEmail}}\",\"gender\":\"yes\",\"status\":\"active\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/6921457",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"6921457"
									]
								},
								"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
							},
							"response": []
						}
					]
				}
			],
			"description": "We conduct negative testing on the AUT/API with an intention to prove that the AUT/API will not work."
		},
		{
			"name": "E2E API AUTOMATION",
			"item": [
				{
					"name": "CREATE USER API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"\r",
									"// API CHAINING CODE\r",
									" \r",
									"var jsonBody = pm.response.json();\r",
									"var extractedID = jsonBody.id;\r",
									"pm.globals.set(\"globalID\", extractedID);\r",
									" \r",
									"var extractedName = jsonBody.name;\r",
									"pm.globals.set(\"globalName\", extractedName);\r",
									" \r",
									"var extractedEmail = jsonBody.email;\r",
									"pm.globals.set(\"globalEmail\", extractedEmail);\r",
									"\r",
									"if(pm.response.code==201)\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has passed\");\r",
									"pm.execution.setNextRequest(\"verify user created\");\r",
									"\r",
									"}\r",
									"else\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has failed\");\r",
									"pm.execution.setNextRequest(\"\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"name\": \"{{$randomFullName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						},
						"description": "CREATE USER API\n\nThis is a REST API that uses HTTP method=POST and is used to create new user in the server/database\n\nExpected Result:\n\n- Verify if response code received from server is 201 Created-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
					},
					"response": []
				},
				{
					"name": "verify user created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify if user is created with name: \"+pm.globals.get(\"globalName\"), function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData[0].name).to.eql(pm.globals.get(\"globalName\"));\r",
									"});\r",
									"\r",
									"if(pm.response.code==200)\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has passed\");\r",
									"    pm.execution.setNextRequest(\"UPDATE USER API\");\r",
									"}\r",
									"else\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has failed\");\r",
									"pm.execution.setNextRequest(\"\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						},
						"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
					},
					"response": []
				},
				{
					"name": "UPDATE USER API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"if(pm.response.code==200)\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has passed\");\r",
									"    pm.execution.setNextRequest(\"verify user updated\");\r",
									"\r",
									"}\r",
									"else\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has failed\");\r",
									"pm.execution.setNextRequest(\"\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"{{globalName}}\",\"email\":\"{{globalEmail}}\",\"gender\":\"male\",\"status\":\"active\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{globalID}}"
							]
						},
						"description": "Update user API  \n  \n**This is a REST API that uses HTTP method=PATCH and is used to update/modify existing user details in the server/database**  \n  \nExpected Result:\n\n- Verify if response code received from server is 200 UPDATED-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
					},
					"response": []
				},
				{
					"name": "verify user updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify if user is updated with name: \"+pm.globals.get(\"globalName\"), function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData[0].name).to.eql(pm.globals.get(\"globalName\"));\r",
									"});\r",
									"\r",
									"if(pm.response.code==200)\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has passed\");\r",
									"    pm.execution.setNextRequest(\"DELETE USER API\");\r",
									"\r",
									"}\r",
									"else\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has failed\");\r",
									"pm.execution.setNextRequest(\"\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						},
						"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
					},
					"response": []
				},
				{
					"name": "DELETE USER API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 204 No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"if(pm.response.code==204)\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has passed\");\r",
									"    pm.execution.setNextRequest(\"verify user deleted\");\r",
									"\r",
									"}\r",
									"else\r",
									"{\r",
									"    console.log(\"The \"+pm.info.requestName+ \" API has failed\");\r",
									"pm.execution.setNextRequest(\"\");\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{globalID}}"
							]
						},
						"description": "DELETE USER API:\n\n**This is a REST API that uses HTTP method=DELETE and is used to delete existing user details in the server/database**\n\n**Expected Result:  \n**\n\n- **Verify if response code received from server is 204 No Content-PASSED**\n    \n- **Verify if response time from server < 5 seconds-PASSED**\n    \n- **Verify if response body is not received from server-PASSED**"
					},
					"response": []
				},
				{
					"name": "verify user deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if response code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify if response time is < 5 seconds\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"\tpm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received in JSON format\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains fields such as id, name, email, gender, status\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"email\")\r",
									"    pm.expect(pm.response.text()).to.include(\"gender\")\r",
									"    pm.expect(pm.response.text()).to.include(\"status\")\r",
									"});\r",
									"\r",
									"// Capturing the response attributes\r",
									"\r",
									"console.log(\"The response code is \"+pm.response.code);\r",
									"console.log(\"The response message is \"+pm.response.status);\r",
									"console.log(\"The response time from server is \"+pm.response.responseTime+\" ms\");\r",
									"\r",
									"console.log(\"The response size received from server is \");\r",
									"console.log(pm.response.size());\r",
									"\r",
									"\r",
									"console.log(\"The response body received from server in JSON format is \");\r",
									"console.log(pm.response.json());        // print in json format\r",
									"\r",
									"\r",
									"console.log(\"The response body received from server in TEXT format is \");\r",
									"console.log(pm.response.text());        // print in text format\r",
									"\r",
									"\r",
									"console.log(\"The response headers received from server are \");\r",
									"console.log(pm.response.headers);\r",
									"\r",
									"pm.test(\"Verify if user is deleted with name: \"+pm.globals.get(\"globalName\"), function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].name).to.not.eql(pm.globals.get(\"globalName\"));\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{CAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						},
						"description": "Add LIST USERS API:  \n  \nStartFragment**This is a REST API that uses HTTP method=GET and is used to retrieve/read/fetch all the existing users details from the server/database**EndFragment  \n  \n\nExpected Result:\n\n- Verify if response code received from server is 200 GET-PASSED\n    \n- Verify if response time from server < 5 seconds-PASSED\n    \n- Verify if response body is received from server-PASSED\n    \n- Verify if response body received from server is in JSON format-PASSED"
					},
					"response": []
				}
			],
			"description": "if ‘CREATE A USER-API’  \nfails, the over-all test should stop\n\nif ‘CREATE A USER API’  \npasses, the control should goto the next API ‘VERIFY IF USER IS CREATED-API’\n\nif an API fails, let the  \ntest stop\n\nif an API passes, let the  \ncontrol goto the next step/API"
		}
	],
	"variable": [
		{
			"key": "CAccessToken",
			"value": "7aae2b24aec11ae439f6e9f60bff79e4127f15d644294402770de5ce3be7a474"
		}
	]
}